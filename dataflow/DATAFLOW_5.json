{
	"name": "DATAFLOW_5",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_src_blob_emp1",
						"type": "DatasetReference"
					},
					"name": "emp1"
				},
				{
					"dataset": {
						"referenceName": "ds_src_blob_emp",
						"type": "DatasetReference"
					},
					"name": "emp"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_dest_blob_op",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "aggregate1"
				},
				{
					"name": "join1"
				},
				{
					"name": "derivedColumn2"
				},
				{
					"name": "surrogateKey1"
				},
				{
					"name": "select1"
				},
				{
					"name": "union1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          id as string,",
				"          empid as string,",
				"          empname as string,",
				"          deptid as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     inferDriftedColumnTypes: true,",
				"     ignoreNoFilesFound: false) ~> emp1",
				"source(output(",
				"          empid as string,",
				"          empname as string,",
				"          deptid as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> emp",
				"emp1 derive(dummy = 'dummy') ~> derivedColumn1",
				"derivedColumn1 aggregate(groupBy(dummy),",
				"     maxid = max(id)) ~> aggregate1",
				"aggregate1, surrogateKey1 join(1==1,",
				"     joinType:'cross',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 derive(id = toString(toInteger(id)+toInteger(maxid))) ~> derivedColumn2",
				"emp keyGenerate(output(id as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey1",
				"derivedColumn2 select(mapColumn(",
				"          empid,",
				"          empname,",
				"          deptid,",
				"          id",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1, emp1 union(byName: true)~> union1",
				"union1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          deptid as string,",
				"          deptname as string",
				"     ),",
				"     partitionFileNames:['id_file.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}